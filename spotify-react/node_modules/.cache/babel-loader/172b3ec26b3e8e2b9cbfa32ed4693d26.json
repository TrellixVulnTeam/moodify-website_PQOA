{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shaylan Rao\\\\Documents\\\\UG3\\\\Final Year Project\\\\Website\\\\spotify-react\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const CLIENT_ID = \"ed61ad2eb1ac48f38a5971328cec9f01\";\n  const REDIRECT_URI = \"http://localhost:8080\";\n  const AUTH_ENDPOINT = \"https://accounts.spotify.com/authorize\";\n  const RESPONSE_TYPE = \"token\";\n  const [token, setToken] = useState(\"\");\n  const [data, setData] = useState([{}]);\n  const [searchKey, setSearchKey] = useState(\"\");\n  const [artists, setArtists] = useState([]);\n  useEffect(() => {\n    const hash = window.location.hash; // Gets the token form local storage\n\n    let token = window.localStorage.getItem(\"token\"); // Only do this if we have a hash to set the token\n\n    if (!token && hash) {\n      // get the access token from the url\n      token = hash.substring(1).split(\"&\").find(elem => elem.startsWith(\"access_token\")).split(\"=\")[1];\n      window.location.hash = \"\"; // sets token in local storage\n\n      window.localStorage.setItem(\"token\", token);\n    }\n\n    setToken(token);\n  }, []);\n  useEffect(() => {\n    fetch(\"/time\").then( // put response into json\n    res => res.json()).then(data => {\n      // set data to be the retrieved json\n      setData(data);\n      console.log(data);\n    });\n  }, []);\n\n  const logout = () => {\n    // resets token\n    setToken(\"\"); // remove token from localstorage\n\n    window.localStorage.removeItem(\"token\");\n  };\n\n  const searchArtists = async e => {\n    // http request\n    e.preventDefault();\n    const {\n      data\n    } = await axios.get(\"https://api.spotify.com/v1/search\", {\n      headers: {\n        Authorization: `Bearer\" $(token)`\n      },\n      params: {\n        q: searchKey,\n        type: \"artist\"\n      }\n    });\n    setArtists(data.artists.items);\n  };\n\n  const renderArtists = () => {\n    return artists.map(artists => {\n      /*#__PURE__*/\n      _jsxDEV(\"div\", {\n        children: [artists.images.length ? /*#__PURE__*/_jsxDEV(\"img\", {\n          src: artists.images[0].url,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 34\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"No Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 79\n        }, this), artists.name]\n      }, artists.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }, this);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Spotify React\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), !token ? /*#__PURE__*/_jsxDEV(\"a\", {\n        href: `${AUTH_ENDPOINT}?client_id=${CLIENT_ID}&redirect_uri=${REDIRECT_URI}&response_type=${RESPONSE_TYPE}`,\n        children: \"Login to Spotify\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: logout,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }, this), token ? /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: searchArtists,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: e => setSearchKey(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Please Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }, this), renderArtists()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"+rNKt+LJ+sn4HYAS8MNomb3GeTU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Shaylan Rao/Documents/UG3/Final Year Project/Website/spotify-react/src/App.js"],"names":["useEffect","useState","axios","App","CLIENT_ID","REDIRECT_URI","AUTH_ENDPOINT","RESPONSE_TYPE","token","setToken","data","setData","searchKey","setSearchKey","artists","setArtists","hash","window","location","localStorage","getItem","substring","split","find","elem","startsWith","setItem","fetch","then","res","json","console","log","logout","removeItem","searchArtists","e","preventDefault","get","headers","Authorization","params","q","type","items","renderArtists","map","images","length","url","name","id","target","value"],"mappings":";;;AAAA,OAAO,WAAP;AACA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAGA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAMC,SAAS,GAAG,kCAAlB;AACA,QAAMC,YAAY,GAAG,uBAArB;AACA,QAAMC,aAAa,GAAG,wCAAtB;AACA,QAAMC,aAAa,GAAG,OAAtB;AAEA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,CAAC,EAAD,CAAD,CAAhC;AACA,QAAM,CAACW,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACa,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAAC,EAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMgB,IAAI,GAAGC,MAAM,CAACC,QAAP,CAAgBF,IAA7B,CADc,CAEd;;AACA,QAAIR,KAAK,GAAGS,MAAM,CAACE,YAAP,CAAoBC,OAApB,CAA4B,OAA5B,CAAZ,CAHc,CAKd;;AACA,QAAI,CAACZ,KAAD,IAAUQ,IAAd,EAAoB;AAClB;AACAR,MAAAA,KAAK,GAAGQ,IAAI,CAACK,SAAL,CAAe,CAAf,EAAkBC,KAAlB,CAAwB,GAAxB,EAA6BC,IAA7B,CAAkCC,IAAI,IAAIA,IAAI,CAACC,UAAL,CAAgB,cAAhB,CAA1C,EAA2EH,KAA3E,CAAiF,GAAjF,EAAsF,CAAtF,CAAR;AAEAL,MAAAA,MAAM,CAACC,QAAP,CAAgBF,IAAhB,GAAuB,EAAvB,CAJkB,CAKlB;;AACAC,MAAAA,MAAM,CAACE,YAAP,CAAoBO,OAApB,CAA4B,OAA5B,EAAqClB,KAArC;AACD;;AAEDC,IAAAA,QAAQ,CAACD,KAAD,CAAR;AAED,GAjBQ,EAiBN,EAjBM,CAAT;AAoBAR,EAAAA,SAAS,CAAC,MAAM;AACd2B,IAAAA,KAAK,CAAC,OAAD,CAAL,CAAeC,IAAf,EACE;AACAC,IAAAA,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAFT,EAGEF,IAHF,CAIElB,IAAI,IAAI;AACN;AACAC,MAAAA,OAAO,CAACD,IAAD,CAAP;AACAqB,MAAAA,OAAO,CAACC,GAAR,CAAYtB,IAAZ;AACD,KARH;AAUD,GAXQ,EAWN,EAXM,CAAT;;AAaA,QAAMuB,MAAM,GAAG,MAAM;AACnB;AACAxB,IAAAA,QAAQ,CAAC,EAAD,CAAR,CAFmB,CAGnB;;AACAQ,IAAAA,MAAM,CAACE,YAAP,CAAoBe,UAApB,CAA+B,OAA/B;AACD,GALD;;AAQA,QAAMC,aAAa,GAAG,MAAOC,CAAP,IAAa;AACjC;AACAA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAM;AAAE3B,MAAAA;AAAF,QAAW,MAAMR,KAAK,CAACoC,GAAN,CAAU,mCAAV,EAA+C;AACpEC,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAG;AADT,OAD2D;AAIpEC,MAAAA,MAAM,EAAE;AACNC,QAAAA,CAAC,EAAE9B,SADG;AAEN+B,QAAAA,IAAI,EAAE;AAFA;AAJ4D,KAA/C,CAAvB;AAUA5B,IAAAA,UAAU,CAACL,IAAI,CAACI,OAAL,CAAa8B,KAAd,CAAV;AACD,GAdD;;AAiBA,QAAMC,aAAa,GAAG,MAAM;AAC1B,WAAO/B,OAAO,CAACgC,GAAR,CAAYhC,OAAO,IAAI;AAC5B;AAAA;AAAA,mBACGA,OAAO,CAACiC,MAAR,CAAeC,MAAf,gBAAwB;AAAK,UAAA,GAAG,EAAElC,OAAO,CAACiC,MAAR,CAAe,CAAf,EAAkBE,GAA5B;AAAiC,UAAA,GAAG,EAAC;AAArC;AAAA;AAAA;AAAA;AAAA,gBAAxB,gBAAqE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADxE,EAEGnC,OAAO,CAACoC,IAFX;AAAA,SAAUpC,OAAO,CAACqC,EAAlB;AAAA;AAAA;AAAA;AAAA;AAID,KALM,CAAP;AAMD,GAPD;;AAUA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAGG,CAAC3C,KAAD,gBACC;AAAG,QAAA,IAAI,EAAG,GAAEF,aAAc,cAAaF,SAAU,iBAAgBC,YAAa,kBAAiBE,aAAc,EAA7G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,gBAGG;AAAQ,QAAA,OAAO,EAAE0B,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANN,EAQGzB,KAAK,gBACJ;AAAM,QAAA,QAAQ,EAAE2B,aAAhB;AAAA,gCACE;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,QAAQ,EAAEC,CAAC,IAAIvB,YAAY,CAACuB,CAAC,CAACgB,MAAF,CAASC,KAAV;AAA9C;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAQ,UAAA,IAAI,EAAE,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADI,gBAOF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAfN,EAmBGR,aAAa,EAnBhB;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD;;GA1GQ1C,G;;KAAAA,G;AA4GT,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\n\nfunction App() {\n  const CLIENT_ID = \"ed61ad2eb1ac48f38a5971328cec9f01\"\n  const REDIRECT_URI = \"http://localhost:8080\"\n  const AUTH_ENDPOINT = \"https://accounts.spotify.com/authorize\"\n  const RESPONSE_TYPE = \"token\"\n\n  const [token, setToken] = useState(\"\")\n  const [data, setData] = useState([{}])\n  const [searchKey, setSearchKey] = useState(\"\")\n  const [artists, setArtists] = useState([])\n\n  useEffect(() => {\n    const hash = window.location.hash\n    // Gets the token form local storage\n    let token = window.localStorage.getItem(\"token\")\n\n    // Only do this if we have a hash to set the token\n    if (!token && hash) {\n      // get the access token from the url\n      token = hash.substring(1).split(\"&\").find(elem => elem.startsWith(\"access_token\")).split(\"=\")[1]\n\n      window.location.hash = \"\"\n      // sets token in local storage\n      window.localStorage.setItem(\"token\", token)\n    }\n\n    setToken(token)\n\n  }, [])\n\n\n  useEffect(() => {\n    fetch(\"/time\").then(\n      // put response into json\n      res => res.json()\n    ).then(\n      data => {\n        // set data to be the retrieved json\n        setData(data)\n        console.log(data)\n      }\n    )\n  }, []);\n\n  const logout = () => {\n    // resets token\n    setToken(\"\")\n    // remove token from localstorage\n    window.localStorage.removeItem(\"token\")\n  }\n\n\n  const searchArtists = async (e) => {\n    // http request\n    e.preventDefault()\n    const { data } = await axios.get(\"https://api.spotify.com/v1/search\", {\n      headers: {\n        Authorization: `Bearer\" $(token)`\n      },\n      params: {\n        q: searchKey,\n        type: \"artist\"\n      }\n    })\n\n    setArtists(data.artists.items)\n  }\n\n\n  const renderArtists = () => {\n    return artists.map(artists => {\n      <div key={artists.id}>\n        {artists.images.length ? <img src={artists.images[0].url} alt=\"\" /> : <div>No Image</div>}\n        {artists.name}\n      </div>\n    })\n  }\n\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Spotify React</h1>\n\n        {!token ?\n          <a href={`${AUTH_ENDPOINT}?client_id=${CLIENT_ID}&redirect_uri=${REDIRECT_URI}&response_type=${RESPONSE_TYPE}`}>Login\n            to Spotify</a>\n          : <button onClick={logout}>Logout</button>}\n\n        {token ?\n          <form onSubmit={searchArtists}>\n            <input type=\"text\" onChange={e => setSearchKey(e.target.value)} />\n            <button type={\"submit\"}>Search</button>\n          </form>\n\n\n          : <h2>Please Login</h2>\n\n        }\n\n        {renderArtists()}\n\n\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}